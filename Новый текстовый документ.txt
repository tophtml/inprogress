
SQL
Базы данных играли всегда важную роль в жизни человеческой цивилизации. Еще древние шумеры хранили  данные царской казны в виде таблицы. Прогресс шел вперед, а таблицы оставались. Почему, как вы думаете?
Очень сильный толчек от простых таблиц к базам данных произошел в 60-х годах, когда готовилась миссия Аполло: полеты на Луну. Североамериканская компания Rockwell заключила контракт с правительством США на участие в проекте Apollo. Построение космического корабля включает в себя сборку нескольких миллионов деталей, поэтому была создана система управления файлами, отслеживавшая информацию о каждой детали. Однако в ходе последующей проверки обнаружилась огромная избыточность. Выяснилось, что почти все данные повторяются в двух и более файлах.
С этого момента создается  Автоматизированную систему заказов. Количество ошибок уменьшилось, но все равно работать с данными были сложно. те времена информация собиралась и хранилась в файлах.каждый файл содержал определенные сведения и для охвата всей предметной области требовалось несколько файлов. Например, сведения о товарах хранились в одном файле, а сведения о клиентах - в другом. Информация о приобретении определенных товаров определенными клиентами - в третьем.
В 1970 году Э. Ф. Кодд опубликовал статью, которая послужила основой для создания реляционной модели данных. Согласно этой модели, данные хранятся в виде таблиц со столбцами и строками. В процессе нормализации таблица как-правило разбиваются на две или несколько более приемлемых таблиц. Доктор Кодд придумал реляционную модель. Одно из важнейших положений реляционной модели − независимость данных. Восьмидесятые знаменуются появлением коммерческих систем баз данных на основе реляционных моделей. Успешно проводятся работы в сфере аппаратного обеспечения баз данных (расширяются области их применения, развивается технология интегральных схем), возникают новые направления.
Позднее появилось название SQL (Structured Query Language). В 1986 году организация ANSI опубликовала официальный стандарт языка SQL. Им пользовались гиганты бизнеса, предназначенные для работы со значительными объемами данных и сложными взаимосвязями. Нужен был более простой язык, который бы легко подходил для более мелких компаний, это способствовало появлению mysql.
Одна из причин популярности MySQL среди пользователей РНР заключается в том, что поддержка этого сервера включается в поставку РНР. Благодаря хорошим характеристикам и обширному набору стандартных интерфейсных функций, очень простых в использовании, MySQL стал самым популярным средством для работы с базами данных в РНР. Лицензионная политика MySQL отличается большей гибкостью в сравнении с другими серверами баз данных. По сути, MySQL распространяется бесплатно за исключением тех случаев, когда вы намереваетесь ее продавать или продавать услуги, создаваемые с ее помощью.
Преимущества MySQL:
< Быстродействие. СУБД MySQL является одной из самых быстрых баз данных из имеющихся на современном рынке.
< Простота использования. СУБД MySQL является высокопроизводительной и относительно простой в использовании СУБД, которую значительно проще инсталлировать и администрировать, чем многие большие системы.
< Малый размер. СУБД MySQL имеет ограниченный размер,
Тестировщику важно знать и уметь работать с СУБД). И наиболее востребованным является знание SQL. Очень часто в описании вакансий есть упоминания про этот навык, который звучит как «Знание SQL на уровне простых запросов». Как правило, для начала достаточно знать базовые вещи уровня INSERT, SELECT, DELETE, UPDATE, WHERE, ORDER BY, в некоторых случаях нужны JOIN, INNER JOIN, RIGHT JOIN, LEFT JOIN. Они позволят тестировщику сверять ожидаемые и фактические результаты в ходе выполнения тестов при работы с данными.






!DOCTYPE html
html lang=en
head
	meta charset=UTF-8
	titleDocumenttitle
	style type=textcss
		@keyframes tra {
			from {
				opacity 0;
				display none;
			}
			to {
				opacity 1;
			}
		}
		@keyframes tra-rev {
			from {
				opacity 1;
			}
			to {
				opacity 0;
			}
		}
		.tr {
				animation tra 1s;
				animation-fill-mode forwards;
				z-index 1;
			}
			.tr-rev {
				animation tra-rev 1s;
				z-index -1;
			}
			.btn,
			.btn2 {
				display none;
				position relative;
				background-color red;
				z-index 10;
			}
			.slider__img_mod {
			position relative;
			display inline-flex;
			left 0;
			transition all ease 1s;
			}
		
	style
head
body
	div class=slider__img style=cursor pointer;
		img style=width 128px; class=img src=1.png
	div
	div class=overlay style=position fixed; background-color rgba(0,0,0,0.4); top 0; left 0; width 100%; height 100%; display none; opacity 0; 
		div class=wrap-wrap background-color pink; border 2px solid red;
			div class=wrap style=position fixed; width 250px; top 10%; left 30%; overflow hidden; 
				div class=slider__img_mod
					img class=slider-img-m style=width 250px; class=img src=1.png
					img class=slider-img-m style=width 250px; class=img src=2.png
					img class=slider-img-m style=width 250px; class=img src=3.png
					img class=slider-img-m style=width 250px; class=img src=4.png
					img class=slider-img-m style=width 250px; class=img src=5.png
					img class=slider-img-m style=width 250px; class=img src=6.png
				div
			div
		div
div
	button class=sliderForward btn onclick=sliderRight()leftbutton
	button class=sliderForward2 btn2 btn-r onclick=sliderLeft()rightbutton
body
script type=textjavascript
	let wrap = document.querySelector('.wrap');
	let slider = document.querySelector('.slider__img_mod');
	let left = 0;

	function sliderLeft() {
		left = left - 250;
		slider.style.left = left + 'px';
		if (left=-1000) {
			left = -1000;
		slider.style.left = left + 'px';	
		}
	}
	function sliderRight() {
		left = left + 250;
		slider.style.left = left + 'px';
		if (left = 0) {
			left = 0;
			slider.style.left = left + 'px';
		}
	}

	let img = document.querySelector('.slider__img').onclick = openImg;
	let overlay = document.querySelector('.overlay');
	let btn = document.querySelector('.sliderForward');
	let btn2 = document.querySelector('.sliderForward2');
	function openImg() {
		overlay.style.display = 'block';
		btn.style.display = 'block';
		btn2.style.display = 'block';
		btn2.style.right = '-850px';
		overlay.classList.remove('tr-rev');
		
		if (openImg) {
			overlay.classList.add('tr');
		}
	}
	overlay.onclick = overlayClose;
	
	function overlayClose() {
		
		this.classList.remove('tr');
		
		if (overlayClose) {

			overlay.classList.add('tr-rev');
			btn.style.display = 'none';
			btn2.style.display = 'none';
		}
	}
	let imga = document.querySelector('.slider-img-m');


script
html
